# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.

# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    - always_declare_return_types
    - always_put_required_named_parameters_first

    - avoid_bool_literals_in_conditional_expressions
    - avoid_empty_else
    - avoid_redundant_argument_values
    - avoid_returning_null_for_void
    - avoid_type_to_string
    - avoid_unused_constructor_parameters
    - avoid_void_async

    - no_duplicate_case_values

    - prefer_single_quotes
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty

    - require_trailing_commas

analyzer:
  exclude:
    - '**/*.g.dart'
    - '**/*.config.dart'
    - '**/*.freezed.dart'
    - '**/*.auto_mappr.dart'
    - 'lib/generated/'
  errors:
    invalid_annotation_target: ignore